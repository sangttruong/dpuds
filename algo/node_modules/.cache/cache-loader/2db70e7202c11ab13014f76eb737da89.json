{"remainingRequest":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/get_data/pull-file.md","dependencies":[{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/get_data/pull-file.md","mtime":1599492777888},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/.docusaurus/docusaurus-plugin-content-docs/site-docs-get-data-pull-file-md-4f7.json","mtime":1599493348178},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/cache-loader/dist/cjs.js","mtime":1599485341520},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js","mtime":1599485341450},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1599485356244},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1599485355668}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3Nhbmd0cnVvbmdfMjAyMS9Eb2N1bWVudHMvR2l0SHViL2RwdWRzL2FsZ28vYW1waG9yYWRhdGEuZ2l0aHViLmlvLXNvdXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOidwdWxsLWZpbGUnLHRpdGxlOidQdWxsIGZsYXQgZmlsZSBmcm9tIGFuIEFtcGhvcmEnLHNpZGViYXJfbGFiZWw6J1B1bGwgRmlsZSd9O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJnZXRfZGF0YS9wdWxsLWZpbGUiLCJpZCI6ImdldF9kYXRhL3B1bGwtZmlsZSIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJQdWxsIGZsYXQgZmlsZSBmcm9tIGFuIEFtcGhvcmEiLCJkZXNjcmlwdGlvbiI6IllvdSBtdXN0IGhhdmUgcHVyY2hhc2VkIGFuIEFtcGhvcmEgdG8gY29uc3VtZSBpdCdzIGRhdGEiLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL2dldF9kYXRhL3B1bGwtZmlsZS5tZCIsInBlcm1hbGluayI6Ii9kb2NzL2dldF9kYXRhL3B1bGwtZmlsZSIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZG9jdXNhdXJ1cy9lZGl0L21hc3Rlci93ZWJzaXRlL2RvY3MvZ2V0X2RhdGEvcHVsbC1maWxlLm1kIiwic2lkZWJhcl9sYWJlbCI6IlB1bGwgRmlsZSIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiQnV5IERhdGEiLCJwZXJtYWxpbmsiOiIvZG9jcy9nZXRfZGF0YS9idXktZGF0YSJ9LCJuZXh0Ijp7InRpdGxlIjoiUHVsbCBUaW1lIFNlcmllcyAoU2lnbmFsKSBmcm9tIGFuIEFtcGhvcmEiLCJwZXJtYWxpbmsiOiIvZG9jcy9nZXRfZGF0YS9wdWxsLXRpbWUtc2VyaWVzIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IGNvbnN0IHJpZ2h0VG9jPVt7dmFsdWU6J0dldCBmaWxlIG9uIHdlYiBhcHAnLGlkOidnZXQtZmlsZS1vbi13ZWItYXBwJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidHZXQgZmlsZSBwcm9ncmFtbWF0aWNhbGx5JyxpZDonZ2V0LWZpbGUtcHJvZ3JhbW1hdGljYWxseScsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJibG9ja3F1b3RlIixudWxsLG1keCgicCIse3BhcmVudE5hbWU6ImJsb2NrcXVvdGUifSxgWW91IG11c3QgaGF2ZSBwdXJjaGFzZWQgYW4gQW1waG9yYSB0byBjb25zdW1lIGl0J3MgZGF0YWApKSxtZHgoInAiLG51bGwsYEZsYXQgZmlsZXMgYXJlIHN0YXRpYyBmaWxlcyBzdWNoIGFzIHRhYmxlcywgaW1hZ2VzLCBncmFwaHMsIGFuZCB0ZXh0LiBZb3UgY2FuIGRvd25sb2FkIEFtcGhvcmEgRmlsZXMsIGVpdGhlciB2aWEgdGhlIHdlYiBhcHBsaWNhdGlvbiwgb3IgYnkgdXNpbmcgdGhlIFJFU1QgQVBJIG9yIGFueSBBbXBob3JhIERhdGEgY2xpZW50IFNESy5gKSxtZHgoImgyIix7ImlkIjoiZ2V0LWZpbGUtb24td2ViLWFwcCJ9LGBHZXQgZmlsZSBvbiB3ZWIgYXBwYCksbWR4KCJwIixudWxsLGBUbyBjb25zdW1lIGFuIEFtcGhvcmEgZmlsZSAoc3RhdGljIGZpbGUgdHlwaWNhbGx5IC50eHQgb3IgLmNzdikgc2VsZWN0IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBGaWxlc2ApLGAgb24gdGhlIGxlZnQgb2YgdGhlIEFtcGhvcmEgcGFnZS4gWW91IHdpbGwgdGhlbiBzZWUgYSBhIGxpc3Qgb2YgYWxsIHRoZSBmaWxlcyBpbiB0aGUgQW1waG9yYS5gKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL2FkZF9maWxlX2FtcGhvcmEucG5nIiwiYWx0IjoiRmxhdCBmaWxlIGRvd25sb2FkIn0pKSksbWR4KCJwIixudWxsLGBTaW1wbHkgY2xpY2sgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYERvd25sb2FkYCksYCBuZXh0IHRvIHRoZSBmaWxlIHlvdSB3YW50LmApLG1keCgiYmxvY2txdW90ZSIsbnVsbCxtZHgoInAiLHtwYXJlbnROYW1lOiJibG9ja3F1b3RlIn0sYE5vdGUgdGhhdCBub3QgYWxsIEFtcGhvcmFzIGNvbnRhaW4gU2lnbmFscy5gKSksbWR4KCJoMiIseyJpZCI6ImdldC1maWxlLXByb2dyYW1tYXRpY2FsbHkifSxgR2V0IGZpbGUgcHJvZ3JhbW1hdGljYWxseWApLG1keCgicCIsbnVsbCxgTW9zdCBvZiB0aGUgdGltZSB5b3Ugd2lsbCB3YW50IHRvIGNvbnN1bWUgZGF0YSBwcm9ncmFtbWF0aWNhbGx5LiBZb3UgY2FuIGNoZWNrIG91dCB0aGUgbGF0ZXN0IFNES3MsIHNhbXBsZSBjb2RlIGFuZCB0dXRvcmlhbHMgYXQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2FtcGhvcmFkYXRhIn0pLGBHaXRIdWJgKSxgLiBXZSBwcm92aWRlIGEgcHVibGljIE9wZW4gQVBJIHNwZWNpZmljYXRpb24gYXQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9hcGkuYW1waG9yYWRhdGEuY29tL3N3YWdnZXIvIn0pLGBhcGkuYW1waG9yYWRhdGEuY29tL3N3YWdnZXJgKSxgLiBXZSBjdXJyZW50bHkgZ2VuZXJhdGUgYW5kIHByb3ZpZGUgYSBDIyBTREssIE5vZGUuanMgU0RLLCBhbmQgUHl0aG9uIFNESy5gKSxtZHgoImg0Iix7ImlkIjoicHl0aG9uIn0sYFB5dGhvbmApLG1keCgicCIsbnVsbCxgWW91IGNhbiBwdWxsIGEgZmlsZSB3aXRoIHB5dGhvbiB1c2luZ2ApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHkifSksYGFtcGhvcmEuZ2V0X2ZpbGUoZmlsZV9uYW1lKS5wdWxsKGRlc3RpbmF0aW9uX2ZpbGVfcGF0aCkKYCkpLG1keCgicCIsbnVsbCxgVGhlIGJhc2ljIGNvZGUgdG8gZ2V0IHN0YXJ0ZWQgcHVsbGluZyBmaWxlcyBpc2ApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHkifSksYCMgSW1wb3J0IEFtcGhvcmEgbW9kdWxlcwpmcm9tIGFtcGhvcmEuY2xpZW50IGltcG9ydCBBbXBob3JhRGF0YVJlcG9zaXRvcnlDbGllbnQsIENyZWRlbnRpYWxzCgojIEltcG9ydCBub24tQW1waG9yYSBtb2R1bGVzCmltcG9ydCBvcwoKIyBMb2dpbiB0byBhbXBob3JhZGF0YS5jb20KY3JlZGVudGlhbHMgPSBDcmVkZW50aWFscyh1c2VybmFtZT1vcy5nZXRlbnYoJ3VzZXJuYW1lJyksIHBhc3N3b3JkPW9zLmdldGVudigncGFzc3dvcmQnKSkKY2xpZW50ID0gQW1waG9yYURhdGFSZXBvc2l0b3J5Q2xpZW50KGNyZWRlbnRpYWxzKQoKIyBHZXQgQW1waG9yYSBvYmplY3QKYW1waG9yYSA9IGNsaWVudC5nZXRfYW1waG9yYShBbXBob3JhX2lkKQoKIyBQdWxsIGZpbGUKYW1waG9yYS5nZXRfZmlsZShmaWxlX25hbWUpLnB1bGwoZGVzdGluYXRpb25fZmlsZV9wYXRoKQpgKSksbWR4KCJwIixudWxsLGBZb3UgY2FuIGRvd25sb2FkIHRoaXMgY29kZSBmcm9tIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9hbXBob3JhZGF0YS9zYW1wbGVzL2Jsb2IvbWFzdGVyL2dlbmVyaWNfdGVtcGxhdGVzL1B1bGxfYV9maWxlLnB5In0pLGBHaXRIdWJgKSxgLmApLG1keCgiaDQiLHsiaWQiOiJjIn0sYEMjYCksbWR4KCJwIixudWxsLGBDb2RlIGZvciBwdWxsaW5nIHNpZ25hbHMgY2FuIGJlIGZvdW5kIG9uIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9hbXBob3JhZGF0YS9kb3RuZXQtc2RrL3RyZWUvbWFzdGVyL3NhbXBsZSJ9KSxgR2l0SHViYCksYC4gV2UgYXJlIGV4cGFuZGluZyBvdXIgZG9jcyBmb3IgQyMgc28gc3RheSB0dW5lZCBmb3IgbW9yZSBkZXRhaWxzLmApLG1keCgiaDQiLHsiaWQiOiJub2RlanMifSxgTm9kZS5qc2ApLG1keCgicCIsbnVsbCxgQ29kZSBmb3IgcHVsbGluZyBzaWduYWxzIGNhbiBiZSBmb3VuZCBvbiBgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vYW1waG9yYWRhdGEvbm9kZWpzLXNkay90cmVlL21hc3Rlci9zYW1wbGVzIn0pLGBHaXRIdWJgKSxgLiBXZSBhcmUgZXhwYW5kaW5nIG91ciBkb2NzIGZvciBOb2RlLmpzIHNvIHN0YXkgdHVuZWQgZm9yIG1vcmUgZGV0YWlscy5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},null]}