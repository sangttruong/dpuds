{"remainingRequest":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/share_data/add-file.md","dependencies":[{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/share_data/add-file.md","mtime":1599492777890},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/.docusaurus/docusaurus-plugin-content-docs/site-docs-share-data-add-file-md-808.json","mtime":1599493348178},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/cache-loader/dist/cjs.js","mtime":1599485341520},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js","mtime":1599485341450},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1599485356244},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1599485355668}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3Nhbmd0cnVvbmdfMjAyMS9Eb2N1bWVudHMvR2l0SHViL2RwdWRzL2FsZ28vYW1waG9yYWRhdGEuZ2l0aHViLmlvLXNvdXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgY29uc3QgZnJvbnRNYXR0ZXI9e2lkOidhZGQtZmlsZScsdGl0bGU6J0FkZCBGaWxlIHRvIEFtcGhvcmEnLHNpZGViYXJfbGFiZWw6J1NoYXJlIEZpbGUnfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJ1bnZlcnNpb25lZElkIjoic2hhcmVfZGF0YS9hZGQtZmlsZSIsImlkIjoic2hhcmVfZGF0YS9hZGQtZmlsZSIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJBZGQgRmlsZSB0byBBbXBob3JhIiwiZGVzY3JpcHRpb24iOiJBbXBob3JhcyBhcmUgc3RhbmRhcmRpc2VkIGRhdGEgY29udGFpbmVycy4gVG8gc2hhcmUgeW91ciBkYXRhLCB5b3UgbmVlZCB0byBjcmVhdGUgYW4gQW1waG9yYSB0aGVuIGZpbGwgaXQgd2l0aCB3aGF0ZXZlciBkYXRhIHlvdSB3YW50LiIsInNvdXJjZSI6IkBzaXRlL2RvY3Mvc2hhcmVfZGF0YS9hZGQtZmlsZS5tZCIsInBlcm1hbGluayI6Ii9kb2NzL3NoYXJlX2RhdGEvYWRkLWZpbGUiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2RvY3VzYXVydXMvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL3NoYXJlX2RhdGEvYWRkLWZpbGUubWQiLCJzaWRlYmFyX2xhYmVsIjoiU2hhcmUgRmlsZSIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiQ3JlYXRlIGFuIEFtcGhvcmEiLCJwZXJtYWxpbmsiOiIvZG9jcy9zaGFyZV9kYXRhL2NyZWF0ZS1hbXBob3JhIn0sIm5leHQiOnsidGl0bGUiOiJBZGQgYSBUaW1lLVNlcmllcyAoU2lnbmFsKSB0byB5b3VyIEFtcGhvcmEiLCJwZXJtYWxpbmsiOiIvZG9jcy9zaGFyZV9kYXRhL2FkZC1zaWduYWwifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W3t2YWx1ZTonQWRkIEZpbGUgd2l0aCB3ZWIgYXBwJyxpZDonYWRkLWZpbGUtd2l0aC13ZWItYXBwJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidBZGQgRmlsZSBwcm9ncmFtbWF0aWNhbGx5JyxpZDonYWRkLWZpbGUtcHJvZ3JhbW1hdGljYWxseScsY2hpbGRyZW46W119XTtjb25zdCBtYWtlU2hvcnRjb2RlPW5hbWU9PmZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O2NvbnN0IGxheW91dFByb3BzPXtyaWdodFRvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLGBBbXBob3JhcyBhcmUgc3RhbmRhcmRpc2VkIGRhdGEgY29udGFpbmVycy4gVG8gc2hhcmUgeW91ciBkYXRhLCB5b3UgbmVlZCB0byBjcmVhdGUgYW4gQW1waG9yYSB0aGVuIGZpbGwgaXQgd2l0aCB3aGF0ZXZlciBkYXRhIHlvdSB3YW50LmApLG1keCgiaDIiLHsiaWQiOiJhZGQtZmlsZS13aXRoLXdlYi1hcHAifSxgQWRkIEZpbGUgd2l0aCB3ZWIgYXBwYCksbWR4KCJibG9ja3F1b3RlIixudWxsLG1keCgicCIse3BhcmVudE5hbWU6ImJsb2NrcXVvdGUifSxgVGhlIG1heCBmaWxlIHNpemUgZm9yIHVwbG9hZGluZyB0aHJvdWdoIHRoZSB3ZWIgaW50ZXJmYWNlIGlzIGN1cnJlbnRseSAxME1CLiBUaGVyZSBpcyBubyBzaXplIGxpbWl0IGZvciB1cGxvYWRpbmcgZmlsZXMgdGhyb3VnaCB0aGUgQVBJYCkpLG1keCgicCIsbnVsbCxgWW91IGNhbiBhZGQgYW55IGtpbmQgb2YgZmlsZSB0byBhbiBBbXBob3JhIC0gaW1hZ2VzLCB0ZXh0IGZpbGVzLCBjc3YsIHdvcmQgZG9jdW1lbnRzIGV0Yy4gVG8gdXBsb2FkIGEgZmlsZSBmcm9tIHlvdXIgY29tcHV0ZXIsIGNsaWNrIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgdXBsb2FkYCksYCBidXR0b24sIHNlbGVjdCBhIGZpbGUsIHRoZW4gY2xpY2sgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHVwbG9hZGApLGAuYCksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9hZGRfZmlsZV9hbXBob3JhLnBuZyIsImFsdCI6IkFkZCBmaWxlIGFtcGhvcmEifSkpKSxtZHgoImJsb2NrcXVvdGUiLG51bGwsbWR4KCJwIix7cGFyZW50TmFtZToiYmxvY2txdW90ZSJ9LGBOb3RlIHRoYXQgeW91IG5lZWQgYSBzdGVhZHkgY29ubmVjdGlvbiB0byB1cGxvYWQgZmlsZXMgYW5kIHNvbWUgdXNlcnMgaGF2ZSByZXBvcnRlZCBpc3N1ZXMgZHVlIHRvIHBvb3IgY29ubmVjdGlvbiB3aXRoIHRoZWlyIGludGVybmV0IHByb3ZpZGVycy5gKSksbWR4KCJoMiIseyJpZCI6ImFkZC1maWxlLXByb2dyYW1tYXRpY2FsbHkifSxgQWRkIEZpbGUgcHJvZ3JhbW1hdGljYWxseWApLG1keCgiaDQiLHsiaWQiOiJweXRob24ifSxgUHl0aG9uYCksbWR4KCJwIixudWxsLGBZb3UgY2FuIGFkZCBhIGZpbGUgd2l0aCBweXRob24gdXNpbmdgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5In0pLGBhbXBob3JhLnB1c2hfZmlsZShmaWxlX3BhdGgpCmApKSxtZHgoInAiLG51bGwsYFRoZSBiYXNpYyBjb2RlIHRvIGdldCBzdGFydGVkIGFkZCBmaWxlcyBpc2ApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHkifSksYCMgSW1wb3J0IEFtcGhvcmEgbW9kdWxlcwpmcm9tIGFtcGhvcmEuY2xpZW50IGltcG9ydCBBbXBob3JhRGF0YVJlcG9zaXRvcnlDbGllbnQsIENyZWRlbnRpYWxzCgojIEltcG9ydCBub24tQW1waG9yYSBtb2R1bGVzCmltcG9ydCBvcwoKIyBMb2dpbiB0byBhbXBob3JhZGF0YS5jb20KY3JlZGVudGlhbHMgPSBDcmVkZW50aWFscyh1c2VybmFtZT1vcy5nZXRlbnYoJ3VzZXJuYW1lJyksIHBhc3N3b3JkPW9zLmdldGVudigncGFzc3dvcmQnKSkKY2xpZW50ID0gQW1waG9yYURhdGFSZXBvc2l0b3J5Q2xpZW50KGNyZWRlbnRpYWxzKQoKIyBHZXQgQW1waG9yYSBvYmplY3QKYW1waG9yYSA9IGNsaWVudC5nZXRfYW1waG9yYShBbXBob3JhX2lkKQoKIyBQdXNoIGZpbGUgdG8gYW1waG9yYQpmaWxlX3BhdGg9InBhdGgvdG8veW91ci9maWxlIgphbXBob3JhLnB1c2hfZmlsZShmaWxlX3BhdGgpCmApKSxtZHgoInAiLG51bGwsYFlvdSBjYW4gZG93bmxvYWQgdGhpcyBjb2RlIGZyb20gYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2FtcGhvcmFkYXRhL3NhbXBsZXMvYmxvYi9tYXN0ZXIvZ2VuZXJpY190ZW1wbGF0ZXMvUHVzaF9hX2ZpbGUucHkifSksYEdpdEh1YmApLGAuIFRoZXJlIGlzIGFsc28gbW9yZSBkZXRhaWxlZCBkb2NzIGluIHRoZSBQeXRob24gU0RLIHNlY3Rpb24uYCksbWR4KCJoNCIseyJpZCI6ImMifSxgQyNgKSxtZHgoInAiLG51bGwsYENvZGUgZm9yIHB1bGxpbmcgc2lnbmFscyBjYW4gYmUgZm91bmQgb24gYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2FtcGhvcmFkYXRhL2RvdG5ldC1zZGsvdHJlZS9tYXN0ZXIvc2FtcGxlIn0pLGBHaXRIdWJgKSxgLiBXZSBhcmUgZXhwYW5kaW5nIG91ciBkb2NzIGZvciBDIyBzbyBzdGF5IHR1bmVkIGZvciBtb3JlIGRldGFpbHMuYCksbWR4KCJoNCIseyJpZCI6Im5vZGVqcyJ9LGBOb2RlLmpzYCksbWR4KCJwIixudWxsLGBDb2RlIGZvciBwdWxsaW5nIHNpZ25hbHMgY2FuIGJlIGZvdW5kIG9uIGAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9hbXBob3JhZGF0YS9ub2RlanMtc2RrL3RyZWUvbWFzdGVyL3NhbXBsZXMifSksYEdpdEh1YmApLGAuIFdlIGFyZSBleHBhbmRpbmcgb3VyIGRvY3MgZm9yIE5vZGUuanMgc28gc3RheSB0dW5lZCBmb3IgbW9yZSBkZXRhaWxzLmApKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}