{"remainingRequest":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/share_data/add-signal.md","dependencies":[{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/share_data/add-signal.md","mtime":1599492777890},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/.docusaurus/docusaurus-plugin-content-docs/site-docs-share-data-add-signal-md-235.json","mtime":1599493348178},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/cache-loader/dist/cjs.js","mtime":1599485341520},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js","mtime":1599485341450},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1599485356244},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1599485355668}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3Nhbmd0cnVvbmdfMjAyMS9Eb2N1bWVudHMvR2l0SHViL2RwdWRzL2FsZ28vYW1waG9yYWRhdGEuZ2l0aHViLmlvLXNvdXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL3Nhbmd0cnVvbmdfMjAyMS9Eb2N1bWVudHMvR2l0SHViL2RwdWRzL2FsZ28vYW1waG9yYWRhdGEuZ2l0aHViLmlvLXNvdXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDonYWRkLXNpZ25hbCcsdGl0bGU6J0FkZCBhIFRpbWUtU2VyaWVzIChTaWduYWwpIHRvIHlvdXIgQW1waG9yYScsc2lkZWJhcl9sYWJlbDonU2hhcmUgVGltZS1TZXJpZXMnfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6InNoYXJlX2RhdGEvYWRkLXNpZ25hbCIsImlkIjoic2hhcmVfZGF0YS9hZGQtc2lnbmFsIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IkFkZCBhIFRpbWUtU2VyaWVzIChTaWduYWwpIHRvIHlvdXIgQW1waG9yYSIsImRlc2NyaXB0aW9uIjoiQW1waG9yYXMgYXJlIHN0YW5kYXJkaXNlZCBkYXRhIGNvbnRhaW5lcnMuIFRvIHNoYXJlIHlvdXIgZGF0YSwgeW91IG5lZWQgdG8gY3JlYXRlIGFuIEFtcGhvcmEgdGhlbiBmaWxsIGl0IHdpdGggd2hhdGV2ZXIgZGF0YSB5b3Ugd2FudC4iLCJzb3VyY2UiOiJAc2l0ZS9kb2NzL3NoYXJlX2RhdGEvYWRkLXNpZ25hbC5tZCIsInBlcm1hbGluayI6Ii9kb2NzL3NoYXJlX2RhdGEvYWRkLXNpZ25hbCIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZG9jdXNhdXJ1cy9lZGl0L21hc3Rlci93ZWJzaXRlL2RvY3Mvc2hhcmVfZGF0YS9hZGQtc2lnbmFsLm1kIiwic2lkZWJhcl9sYWJlbCI6IlNoYXJlIFRpbWUtU2VyaWVzIiwic2lkZWJhciI6InNvbWVTaWRlYmFyIiwicHJldmlvdXMiOnsidGl0bGUiOiJBZGQgRmlsZSB0byBBbXBob3JhIiwicGVybWFsaW5rIjoiL2RvY3Mvc2hhcmVfZGF0YS9hZGQtZmlsZSJ9LCJuZXh0Ijp7InRpdGxlIjoiU2hhcmUgQW1waG9yYSB0aHJvdWdoIGVtYWlsIiwicGVybWFsaW5rIjoiL2RvY3Mvc2hhcmVfZGF0YS9lbWFpbC1hbXBob3JhIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidBZGQgU2lnbmFsIG9uIHdlYiBhcHAnLGlkOidhZGQtc2lnbmFsLW9uLXdlYi1hcHAnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0FkZCBTaWduYWwgcHJvZ3JhbW1hdGljYWxseScsaWQ6J2FkZC1zaWduYWwtcHJvZ3JhbW1hdGljYWxseScsY2hpbGRyZW46W119XTt2YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17cmlnaHRUb2M6cmlnaHRUb2N9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCwiQW1waG9yYXMgYXJlIHN0YW5kYXJkaXNlZCBkYXRhIGNvbnRhaW5lcnMuIFRvIHNoYXJlIHlvdXIgZGF0YSwgeW91IG5lZWQgdG8gY3JlYXRlIGFuIEFtcGhvcmEgdGhlbiBmaWxsIGl0IHdpdGggd2hhdGV2ZXIgZGF0YSB5b3Ugd2FudC4iKSxtZHgoImgyIix7ImlkIjoiYWRkLXNpZ25hbC1vbi13ZWItYXBwIn0sIkFkZCBTaWduYWwgb24gd2ViIGFwcCIpLG1keCgicCIsbnVsbCwiU2lnbmFscyBhcmUgbnVtZXJpYyBkYXRhIHRoYXQgY2hhbmdlIG92ZXIgdGltZS4gQWRkIGEgc2lnbmFsIGJ5IGNsaWNraW5nICIsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LCJOZXcgU2lnbmFsIiksIiBhbmQgc3BlY2lmeSB0aGUgcHJvcGVydHkgKGkuZS4gdGhlIG5hbWUgb2YgdGhlIHNpZ25hbCksIGUuZy4gdGVtcGVyYXR1cmUuIiksbWR4KCJwIixudWxsLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy9hZGRfc2lnbmFsX2FtcGhvcmEucG5nIiwiYWx0IjoiQWRkIHNpZ25hbCBhbXBob3JhIn0pKSksbWR4KCJwIixudWxsLCJOb3cgeW91IGNhbiBzdWJtaXQgYSB2YWx1ZSBmb3IgdGhhdCBzaWduYWwgKGUuZy4gdGhlIGN1cnJlbnQgdGVtcGVyYXR1cmUpIHZpYSB0aGUgIixtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sIk5ldyBWYWx1ZXMiKSwiIGJ1dHRvbi4gT25jZSBzdWJtaXR0ZWQsIHlvdSdsbCBzdGFydCBzZWVpbmcgZGF0YSBvbiB0aGUgZ3JhcGguIiksbWR4KCJibG9ja3F1b3RlIixudWxsLG1keCgicCIse3BhcmVudE5hbWU6ImJsb2NrcXVvdGUifSwiSXQgbWF5IHRha2UgdXAgdG8gYSBtaW51dGUgZm9yIHRoZSBuZXcgdmFsdWUgdG8gYmUgcHJvY2Vzc2VkIGFuZCB0byBzaG93IG9uIHRoZSBncmFwaC4iKSksbWR4KCJoMiIseyJpZCI6ImFkZC1zaWduYWwtcHJvZ3JhbW1hdGljYWxseSJ9LCJBZGQgU2lnbmFsIHByb2dyYW1tYXRpY2FsbHkiKSxtZHgoInAiLG51bGwsIlRoZXJlIGFyZSB0d28gc3RlcHMgdG8gYWRkaW5nIGEgc2lnbmFsLiBZb3UgZmlyc3QgbmVlZCB0byBhZGQgdGhlIFNpZ25hbCBvYmplY3QgdGhlbiBhZGQgZGF0YSB0byB0aGUgb2JqZWN0LiIpLG1keCgiaDQiLHsiaWQiOiJweXRob24ifSwiUHl0aG9uIiksbWR4KCJwIixudWxsLCJUaGUgYmFzaWMgY29kZSBmb3IgY3JlYXRpbmcgdGhlIHNpZ25hbCBpcyIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHkifSksImFtcGhvcmEuY3JlYXRlX3NpZ25hbChcInNpZ25hbF9uYW1lXCIsIGF0dHJpYnV0ZXM9e1widW5pdHNcIjpcIlhZWlwifSlcbiIpKSxtZHgoInAiLG51bGwsImFuZCB0aGUgYmFzaWMgY29kZSBmb3IgdXBkYXRpbmcgYSBzaWduYWwgaXMiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5In0pLCJhbXBob3JhLnB1c2hfc2lnbmFsc19kaWN0X2FycmF5KFNpZ25hbHMpXG4iKSksbWR4KCJwIixudWxsLCJZb3UgY2FuIGdldCBzdGFydGVkIGFkZGluZyBhbmQgdXBkYXRpbmcgU2lnbmFscyB3aXRoIHRoZSBjb2RlIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1weSJ9KSwiIyBJbXBvcnQgQW1waG9yYSBtb2R1bGVzXG5mcm9tIGFtcGhvcmEuY2xpZW50IGltcG9ydCBBbXBob3JhRGF0YVJlcG9zaXRvcnlDbGllbnQsIENyZWRlbnRpYWxzXG5cbiMgSW1wb3J0IG5vbi1BbXBob3JhIG1vZHVsZXNcbmltcG9ydCBvc1xuXG4jIExvZ2luIHRvIGFtcGhvcmFkYXRhLmNvbVxuY3JlZGVudGlhbHMgPSBDcmVkZW50aWFscyh1c2VybmFtZT1vcy5nZXRlbnYoJ3VzZXJuYW1lJyksIHBhc3N3b3JkPW9zLmdldGVudigncGFzc3dvcmQnKSlcbmNsaWVudCA9IEFtcGhvcmFEYXRhUmVwb3NpdG9yeUNsaWVudChjcmVkZW50aWFscylcblxuIyBDcmVhdGUgc2lnbmFsIG9iamVjdC4gVXBkYXRlIGFzIG9mdGVuIGFzIHlvdSB3aXNoXG5TaWduYWxzID0gW2RpY3QodCA9IGRhdGV0aW1lX3ZhbHVlLCBzaWduYWxfbmFtZSA9IHNpZ25hbF92YWx1ZSldXG5cbiMgR2V0IEFtcGhvcmEgb2JqZWN0XG5hbXBob3JhID0gY2xpZW50LmdldF9hbXBob3JhKEFtcGhvcmFfaWQpXG5cbiMgQ3JlYXRlIHNpZ25hbFxuYW1waG9yYS5jcmVhdGVfc2lnbmFsKFwic2lnbmFsX25hbWVcIiwgYXR0cmlidXRlcz17XCJ1bml0c1wiOlwiWFlaXCJ9KVxuXG4jIENyZWF0ZSB1cGRhdGUgc2lnbmFsXG5hbXBob3JhLnB1c2hfc2lnbmFsc19kaWN0X2FycmF5KFNpZ25hbHMpXG4iKSksbWR4KCJwIixudWxsLCJZb3UgY2FuIGRvd25sb2FkIHRoaXMgY29kZSBmcm9tICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9hbXBob3JhZGF0YS9zYW1wbGVzL2Jsb2IvbWFzdGVyL2dlbmVyaWNfdGVtcGxhdGVzL0NyZWF0ZV9hX1NpZ25hbC5weSJ9KSwiR2l0SHViIiksIi4gVGhlcmUgaXMgYWxzbyBtb3JlIGRldGFpbGVkIGRvY3MgaW4gdGhlIFB5dGhvbiBTREsgc2VjdGlvbi4gVGhlcmUgaXMgYWxzbyBhICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3dhdGNoP3Y9TTZrVzRQbzFMbVkifSksInR1dG9yaWFsIHZpZGVvIiksIiB5b3UgY2FuIHdhdGNoIHRvby4iKSxtZHgoImg0Iix7ImlkIjoiYyJ9LCJDIyIpLG1keCgicCIsbnVsbCwiQ29kZSBmb3IgcHVsbGluZyBzaWduYWxzIGNhbiBiZSBmb3VuZCBvbiAiLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vYW1waG9yYWRhdGEvZG90bmV0LXNkay90cmVlL21hc3Rlci9zYW1wbGUifSksIkdpdEh1YiIpLCIuIFdlIGFyZSBleHBhbmRpbmcgb3VyIGRvY3MgZm9yIEMjIHNvIHN0YXkgdHVuZWQgZm9yIG1vcmUgZGV0YWlscy4iKSxtZHgoImg0Iix7ImlkIjoibm9kZWpzIn0sIk5vZGUuanMiKSxtZHgoInAiLG51bGwsIkNvZGUgZm9yIHB1bGxpbmcgc2lnbmFscyBjYW4gYmUgZm91bmQgb24gIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2FtcGhvcmFkYXRhL25vZGVqcy1zZGsvdHJlZS9tYXN0ZXIvc2FtcGxlcyJ9KSwiR2l0SHViIiksIi4gV2UgYXJlIGV4cGFuZGluZyBvdXIgZG9jcyBmb3IgTm9kZS5qcyBzbyBzdGF5IHR1bmVkIGZvciBtb3JlIGRldGFpbHMuIikpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}