{"remainingRequest":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/get_started/what-is-amphora.md","dependencies":[{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/get_started/what-is-amphora.md","mtime":1599492777889},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/.docusaurus/docusaurus-plugin-content-docs/site-docs-get-started-what-is-amphora-md-1c9.json","mtime":1599493348178},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/cache-loader/dist/cjs.js","mtime":1599485341520},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js","mtime":1599485341450},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1599485356244},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1599485355668}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3Nhbmd0cnVvbmdfMjAyMS9Eb2N1bWVudHMvR2l0SHViL2RwdWRzL2FsZ28vYW1waG9yYWRhdGEuZ2l0aHViLmlvLXNvdXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL3Nhbmd0cnVvbmdfMjAyMS9Eb2N1bWVudHMvR2l0SHViL2RwdWRzL2FsZ28vYW1waG9yYWRhdGEuZ2l0aHViLmlvLXNvdXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDond2hhdC1pcy1hbXBob3JhJyx0aXRsZTonV2hhdCBpcyBhbiBBbXBob3JhJyxzaWRlYmFyX2xhYmVsOidXaGF0IGlzIGFuIEFtcGhvcmEnfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6ImdldF9zdGFydGVkL3doYXQtaXMtYW1waG9yYSIsImlkIjoiZ2V0X3N0YXJ0ZWQvd2hhdC1pcy1hbXBob3JhIiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IldoYXQgaXMgYW4gQW1waG9yYSIsImRlc2NyaXB0aW9uIjoiQW4gQW1waG9yYSBpcyBhIHNoYXJlYWJsZSBkYXRhIGNvbnRhaW5lci4gWW91IGNhbiBwdXQgd2hhdGV2ZXIgZGF0YSB5b3Ugd2FudCBpbiBhbiBBbXBob3JhLiBJdCBoYXMgc3RhbmRhcmRpc2VkIG1ldGFkYXRhIHRvIGVuYWJsZSBlYXNpZXIgYW5kIGZhc3RlciBzaGFyaW5nLCBzZWFyY2ggYW5kIG1hbmFnZW1lbnQuIiwic291cmNlIjoiQHNpdGUvZG9jcy9nZXRfc3RhcnRlZC93aGF0LWlzLWFtcGhvcmEubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9nZXRfc3RhcnRlZC93aGF0LWlzLWFtcGhvcmEiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL2RvY3VzYXVydXMvZWRpdC9tYXN0ZXIvd2Vic2l0ZS9kb2NzL2dldF9zdGFydGVkL3doYXQtaXMtYW1waG9yYS5tZCIsInNpZGViYXJfbGFiZWwiOiJXaGF0IGlzIGFuIEFtcGhvcmEiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IkhvdyBBbXBob3JhIERhdGEgd29ya3MiLCJwZXJtYWxpbmsiOiIvZG9jcy9nZXRfc3RhcnRlZC9ob3ctYTEwYS13b3JrcyJ9LCJuZXh0Ijp7InRpdGxlIjoiRmluZCBEYXRhIiwicGVybWFsaW5rIjoiL2RvY3MvZ2V0X2RhdGEvZmluZC1kYXRhIn19Oy8qIEBqc3ggbWR4ICovZXhwb3J0IHZhciByaWdodFRvYz1be3ZhbHVlOidJbnRyb2R1Y3Rpb24nLGlkOidpbnRyb2R1Y3Rpb24nLGNoaWxkcmVuOltdfSx7dmFsdWU6J1RlY2huaWNhbCBkZWZpbml0aW9uJyxpZDondGVjaG5pY2FsLWRlZmluaXRpb24nLGNoaWxkcmVuOltdfSx7dmFsdWU6J0ltcGFjdCcsaWQ6J2ltcGFjdCcsY2hpbGRyZW46W119XTt2YXIgbWFrZVNob3J0Y29kZT1mdW5jdGlvbiBtYWtlU2hvcnRjb2RlKG5hbWUpe3JldHVybiBmdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTt9O3ZhciBsYXlvdXRQcm9wcz17cmlnaHRUb2M6cmlnaHRUb2N9O3ZhciBNRFhMYXlvdXQ9IndyYXBwZXIiO2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE1EWENvbnRlbnQoX3JlZil7dmFyIGNvbXBvbmVudHM9X3JlZi5jb21wb25lbnRzLHByb3BzPV9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsWyJjb21wb25lbnRzIl0pO3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCwiQW4gQW1waG9yYSBpcyBhIHNoYXJlYWJsZSBkYXRhIGNvbnRhaW5lci4gWW91IGNhbiBwdXQgd2hhdGV2ZXIgZGF0YSB5b3Ugd2FudCBpbiBhbiBBbXBob3JhLiBJdCBoYXMgc3RhbmRhcmRpc2VkIG1ldGFkYXRhIHRvIGVuYWJsZSBlYXNpZXIgYW5kIGZhc3RlciBzaGFyaW5nLCBzZWFyY2ggYW5kIG1hbmFnZW1lbnQuIiksbWR4KCJwIixudWxsLCJUaGUgbmFtZSBBbXBob3JhIGNvbWVzIGZyb20gdGhlIHViaXF1aXRvdXMgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQW1waG9yYSJ9KSwiR3JlZWsgdmVzc2VscyIpLCIgdXNlZCB0byBzdG9yZSBhbmQgdHJhbnNwb3J0IGFncmljdWx0dXJhbCBnb29kcy4iKSxtZHgoImgyIix7ImlkIjoiaW50cm9kdWN0aW9uIn0sIkludHJvZHVjdGlvbiIpLG1keCgicCIsbnVsbCwiSGlzdG9yeSBoYXMgc2hvd24gdXMgdGhhdCBjb250YWluZXJzIGFyZSBrZXkgdG8gaW1wcm92aW5nIHNoYXJpbmcgYW5kIHVzZWZ1bG5lc3Mgb2YgY29tbW9kaXRpZXMuIFRoZSBBbXBob3JhIHdhcyB0aGUgZmlyc3Qgc3RhbmRhcmRpc2VkIHRyYWRpbmcgY29udGFpbmVyIGFuZCBzdGFydGVkIGEgdHJhZGl0aW9uIHRoYXQgY29udGludWVzIHRvIHRvZGF5cyA0MGZ0IGNvbnRhaW5lci4gIiksbWR4KCJwIixudWxsLCJSZWNlbnRseSB0ZWNobm9sb2d5IGhhcyBzdGFydGVkIHRvIHVzZSBjb250YWluZXJpc2F0aW9uLiBEb2NrZXIgaXMgYSB3ZWxsLWtub3duIGV4YW1wbGUgYW5kIGluY2x1ZGVzIDQwZnQgY29udGFpbmVycyBpbiBpdHMgbG9nbywgbGVhdmluZyBubyB1bmNlcnRhaW50eSBhcyB0byB3aGF0IGluc3BpcmVkIGl0LiIpLG1keCgicCIsbnVsbCwiV2UgaGF2ZSB0YWtlbiB0aGUgc2FtZSBjb25jZXB0IG9mIHN0YW5kYXJkIGNvbnRhaW5lcmlzYXRpb24gYW5kIGFwcGxpZWQgaXQgdG8gZGF0YS4gIiksbWR4KCJwIixudWxsLCJGdXJ0aGVybW9yZSwgc3RhbmRhcmRpc2VkIGNvbnRhaW5lcnMgZ2V0cyBoYWxmd2F5IGFyb3VuZCB0aGUgdHJpY2t5IHByb2JsZW0gb2YgZGlmZmVyZW50IGRhdGEgc3RhbmRhcmRzLiBEYXRhIHN0YW5kYXJkcyBhcmUgZ3JlYXQgYnV0IHRlY2hub2xvZ2lzdHMgc2hvdWxkbid0IHdhaXQgZm9yIHN0YW5kYXJkcyB0byBkZXZlbG9wIGFuZCBpbm5vdmF0ZS4gQW1waG9yYXMgY2FuIGNvbnRhaW4gYW55IHR5cGUgb2YgZGF0YSBmcm9tIGFueSBzdGFuZGFyZCBzbyB5b3UgY2FuIHVzZSBhbnkgdHlwZSBvZiBkYXRhIHlvdSBuZWVkLiIpLG1keCgiaDIiLHsiaWQiOiJ0ZWNobmljYWwtZGVmaW5pdGlvbiJ9LCJUZWNobmljYWwgZGVmaW5pdGlvbiIpLG1keCgicCIsbnVsbCwiQW4gQW1waG9yYSBpcyBhIGNvbnRhaW5lciBmb3IgZGF0YSBzaW1pbGFyIHRvIGEgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ29udGFpbmVyaXphdGlvbiJ9KSwic2hpcHBpbmcgY29udGFpbmVyIiksIiBvciBhICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vd3d3LmRvY2tlci5jb20vcmVzb3VyY2VzL3doYXQtY29udGFpbmVyIn0pLCJEb2NrZXIgY29udGFpbmVyIiksIi4gQW4gQW1waG9yYSBpcyBhIHN0YW5kYXJkaXNlZCB1bml0IG9mIGRhdGEgaG9zdGVkIG9uIHRoZSBBbXBob3JhIERhdGEgcmVwb3NpdG9yeS4gVXNpbmcgYW4gQW1waG9yYSwgeW91IGNhbiBzdGFuZGFyZGlzZSBtZXRhZGF0YSwgYXBwbHkgYWNjZXNzIGNvbnRyb2xzLCB0cmFjayBhbmQgcmVwb3J0IHVzYWdlLCBkaXN0cmlidXRlIGFuZCBtb25ldGlzZSB5b3VyIGRhdGEsIG1vbml0b3IgRVRMIGFjdGl2aXRpZXMsIGdvdmVybiBkZXJpdmVkIG1vZGVscywgYW5kIG1vcmUuIFlvdSBjYW4gaW50ZXJhY3Qgd2l0aCBhbiBBbXBob3JhIHVzaW5nIHRoZSB3ZWIgYXBwbGljYXRpb24sIEFQSSwgb3IgdmlhIG9uZSBvZiBvdXIgU0RLcy4gWW91IG11c3QgaGF2ZSBhbiBhY2NvdW50IHRvIGFjY2VzcyBkYXRhLiIpLG1keCgiaDIiLHsiaWQiOiJpbXBhY3QifSwiSW1wYWN0IiksbWR4KCJwIixudWxsLCJUaGUgaW1wYWN0IG9mIHVzaW5nIEFtcGhvcmFzIGlzIHRocmVlIGZvbGQuIFlvdSBjYW4gIiksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSwiSW5zdGFudGx5IHNoYXJlIGFuZCB0cmFkZSBkYXRhIiksbWR4KCJsaSIse3BhcmVudE5hbWU6InVsIn0sIlJlZHVjZSB0aGUgcmlzayBhY3Jvc3MgeW91ciBkYXRhIGVzdGF0ZSIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LCJSZWR1Y2UgZGF0YSBpbnRlZ3JhdGlvbiBlZmZvcnQiKSksbWR4KCJwIixudWxsLCJUaGlzIGlzIGFsbCBwb3NzaWJsZSBkdWUgdG8gdGhlIEFtcGhvcmEgY29udGFpbmVyIHN0cnVjdHVyZS4iKSxtZHgoImg0Iix7ImlkIjoic2hhcmluZyJ9LCJTaGFyaW5nIiksbWR4KCJwIixudWxsLCJTaGFyaW5nIGRhdGEsIHdoZXRoZXIgd2l0aCBrbm93biBjb2xsYWJvcmF0b3JzLCBjb21tZXJjaWFsIHBhcnRuZXJzLCBvciB0aGlyZCBwYXJ0aWVzIG9uIHRoZSBvdGhlcnNpZGUgb2YgdGhlIHdvcmxkIGluY3JlYXNlcyBpdHMgdXNlZnVsbmVzcy4gQW1waG9yYXMgYXJlIGluc3RhbnRseSBzaGFyYWJsZSBvbiB0aGUgQW1waG9yYSBEYXRhIHBsYXRmb3JtLiBZb3UgY2FuIHNoYXJlIGRhdGEgZm9yIGZyZWUgb3IgbW9uZXRpc2UgaXQuIFlvdSBjYW4gc2hhcmUgZGF0YSB3aXRoIGV2ZXJ5b25lIGluIHRoZSB3b3JsZCBvciBqdXN0IGEgc2VsZWN0IGZldy4gIiksbWR4KCJoNCIseyJpZCI6InJpc2sifSwiUmlzayIpLG1keCgicCIsbnVsbCwiUmlzayBtYW5hZ2VtZW50IGluIGRhdGEgaXMgaW1wb3J0YW50IHRvIGV2ZXJ5b25lLiBUaGlzIGluY2x1ZGVzIHByaXZhY3ksIHNlY3VyaXR5LCBhY2Nlc3MsIGFuZCB1c2FnZSBjb25zaWRlcmF0aW9ucy4gVXNpbmcgdGhlIEFtcGhvcmEgc3RydWN0dXJlIGVuYWJsZXMgeW91IHRvIHNldCBzdHJpY3QgcmVzdHJpY3Rpb25zIG9uIHdobyBjYW4gdXNlIGFuIEFtcGhvcmEgYW5kIGhvdyB0aGV5IGNhbiB1c2UgaXQuIEl0IGFsc28gZ2l2ZXMgeW91IGEgY2xlYXIgbG93IGVmZm9ydCBmcmFtZXdvcmsgdG8gbWFuYWdlIGRhdGEgcXVhbGl0eSBhbmQgbW9kZWwgZ292ZXJuYW5jZS4iKSxtZHgoImg0Iix7ImlkIjoiaW50ZWdyYXRpb24ifSwiSW50ZWdyYXRpb24iKSxtZHgoInAiLG51bGwsIkludGVncmF0aW9uIGlzIGZhciBzaW1wbGVyIHRvIHNldCB1cCBhbmQgbWFpbnRhaW4gd2l0aCBBbXBob3Jhcy4gRmlyc3RseSB5b3UgY2FuIGVhc2lseSBmaW5kIGFuZCBjb25uZWN0IHRoZSBzcGVjaWZpYyBkYXRhIGZlZWRzIHlvdSB3YW50LiBTZWNvbmRseSwgYXMgYWxsIEFtcGhvcmFzIHVzZSBhIHNpbmdsZSBtb2Rlcm4gQVBJLCB5b3UgY2FuIHVzZSB0aGUgc2FtZSBFVEwgam9icyB0byBwdWxsIGRhdGEuIExhc3RseSBBbXBob3JhcyBlbmFibGUgeW91IHRvIGNvbm5lY3QgZGlzcGFyYXRlIGFuZCBzaWxvZWQgZGF0YXNldHMgd2l0aGluIHlvdXIgb3JnYW5pc2F0aW9uIHdpdGhvdXQgdGhlIGNvc3Qgb2YgY3JlYXRpbmcgY3VzdG9tIGluZnJhc3RydWN0dXJlLiIpKTt9O01EWENvbnRlbnQuaXNNRFhDb21wb25lbnQ9dHJ1ZTs="},null]}