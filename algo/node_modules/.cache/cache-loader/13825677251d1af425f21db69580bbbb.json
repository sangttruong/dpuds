{"remainingRequest":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/SDKs/python-create-amphora.md","dependencies":[{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/docs/SDKs/python-create-amphora.md","mtime":1599492777884},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/.docusaurus/docusaurus-plugin-content-docs/site-docs-sd-ks-python-create-amphora-md-4cf.json","mtime":1599493348179},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/cache-loader/dist/cjs.js","mtime":1599485341520},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/babel-loader/lib/index.js","mtime":1599485341450},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1599485356244},{"path":"/Users/sangtruong_2021/Documents/GitHub/dpuds/algo/amphoradata.github.io-source/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1599485355668}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL3Nhbmd0cnVvbmdfMjAyMS9Eb2N1bWVudHMvR2l0SHViL2RwdWRzL2FsZ28vYW1waG9yYWRhdGEuZ2l0aHViLmlvLXNvdXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL3Nhbmd0cnVvbmdfMjAyMS9Eb2N1bWVudHMvR2l0SHViL2RwdWRzL2FsZ28vYW1waG9yYWRhdGEuZ2l0aHViLmlvLXNvdXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDoncHl0aG9uLWNyZWF0ZS1hbXBob3JhJyx0aXRsZTonQ3JlYXRpbmcgYW4gQW1waG9yYSB3aXRoIFB5dGhvbicsc2lkZWJhcl9sYWJlbDonQ3JlYXRlIGFuIEFtcGhvcmEnfTtleHBvcnQgdmFyIG1ldGFkYXRhPXsidW52ZXJzaW9uZWRJZCI6IlNES3MvcHl0aG9uLWNyZWF0ZS1hbXBob3JhIiwiaWQiOiJTREtzL3B5dGhvbi1jcmVhdGUtYW1waG9yYSIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJDcmVhdGluZyBhbiBBbXBob3JhIHdpdGggUHl0aG9uIiwiZGVzY3JpcHRpb24iOiJZb3UgY2FuIGVhc2lseSBjcmVhdGUgYW4gQW1waG9yYSB3aXRoIHRoZSBweXRob24gU0RLLiBXZSB3aWxsIGZpcnN0IGRlc2NyaWJlIHRoZSBBbXBob3JhIHRoYXQgd2Ugd2FudCB0byBjcmVhdGUsIHRoZW4gY3JlYXRlIGl0LiIsInNvdXJjZSI6IkBzaXRlL2RvY3MvU0RLcy9weXRob24tY3JlYXRlLWFtcGhvcmEubWQiLCJwZXJtYWxpbmsiOiIvZG9jcy9TREtzL3B5dGhvbi1jcmVhdGUtYW1waG9yYSIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZG9jdXNhdXJ1cy9lZGl0L21hc3Rlci93ZWJzaXRlL2RvY3MvU0RLcy9weXRob24tY3JlYXRlLWFtcGhvcmEubWQiLCJzaWRlYmFyX2xhYmVsIjoiQ3JlYXRlIGFuIEFtcGhvcmEiLCJzaWRlYmFyIjoic29tZVNpZGViYXIiLCJwcmV2aW91cyI6eyJ0aXRsZSI6IkZpbmQgRGF0YSB3aXRoIHB5dGhvbiBTREsiLCJwZXJtYWxpbmsiOiIvZG9jcy9TREtzL3B5dGhvbi1maW5kLWRhdGEifSwibmV4dCI6eyJ0aXRsZSI6IlVwbG9hZGluZyBhIGZpbGUgd2l0aCBQeXRob24iLCJwZXJtYWxpbmsiOiIvZG9jcy9TREtzL3B5dGhvbi11cGxvYWQtZmlsZSJ9fTsvKiBAanN4IG1keCAqL2V4cG9ydCB2YXIgcmlnaHRUb2M9W3t2YWx1ZTonRGVzY3JpYmUgQW1waG9yYScsaWQ6J2Rlc2NyaWJlLWFtcGhvcmEnLGNoaWxkcmVuOltdfSx7dmFsdWU6J1NhdmUgdGhlIElkIG9mIHlvdXIgbmV3IEFtcGhvcmEnLGlkOidzYXZlLXRoZS1pZC1vZi15b3VyLW5ldy1hbXBob3JhJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidPdGhlciBjb2RlIHRvIGdldCB5b3Ugc3RhcnRlZCcsaWQ6J290aGVyLWNvZGUtdG8tZ2V0LXlvdS1zdGFydGVkJyxjaGlsZHJlbjpbXX1dO3ZhciBtYWtlU2hvcnRjb2RlPWZ1bmN0aW9uIG1ha2VTaG9ydGNvZGUobmFtZSl7cmV0dXJuIGZ1bmN0aW9uIE1EWERlZmF1bHRTaG9ydGNvZGUocHJvcHMpe2NvbnNvbGUud2FybigiQ29tcG9uZW50ICIrbmFtZSsiIHdhcyBub3QgaW1wb3J0ZWQsIGV4cG9ydGVkLCBvciBwcm92aWRlZCBieSBNRFhQcm92aWRlciBhcyBnbG9iYWwgc2NvcGUiKTtyZXR1cm4gbWR4KCJkaXYiLHByb3BzKTt9O307dmFyIGxheW91dFByb3BzPXtyaWdodFRvYzpyaWdodFRvY307dmFyIE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKXt2YXIgY29tcG9uZW50cz1fcmVmLmNvbXBvbmVudHMscHJvcHM9X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLCJZb3UgY2FuIGVhc2lseSBjcmVhdGUgYW4gQW1waG9yYSB3aXRoIHRoZSBweXRob24gU0RLLiBXZSB3aWxsIGZpcnN0IGRlc2NyaWJlIHRoZSBBbXBob3JhIHRoYXQgd2Ugd2FudCB0byBjcmVhdGUsIHRoZW4gY3JlYXRlIGl0LiAiKSxtZHgoInAiLG51bGwsIkFtcGhvcmFzIGhhdmUgc3RhbmRhcmRpc2VkIG1ldGFkYXRhLiBUaGlzIGVuYWJsZXMgeW91IHRvIHF1aWNrbHkgc2VhcmNoLCBtYW5hZ2UsIGFuZCBjb25zdW1lIGEgdmFyaWV0eSBvZiBkaWZmZXJlbnQgZGF0YXR5cGVzLiIpLG1keCgiaDIiLHsiaWQiOiJkZXNjcmliZS1hbXBob3JhIn0sIkRlc2NyaWJlIEFtcGhvcmEiKSxtZHgoInAiLG51bGwsIkFuIEFtcGhvcmEgbmVlZHMgYSBmZXcga2V5IGJpdHMgb2YgbWV0YWRhdGEuIFRoaXMgaW5jbHVkZXMgYSBuYW1lLCBkZXNjcmlwdGlvbiwgYW5kIGEgcHJpY2UuIFdlIGNhbiBjcmVhdGUgdGhlbSB3aXRoIHNpbXBsZSBzdHJpbmdzICIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHkifSksIiMgdXNlIG1lYW5pbmdmdWwgbmFtZSBhbmQgZGVzY3JpcHRpb25zIGZvciB5b3VyIEFtcGhvcmFcbm5hbWUgPSBcIkhpc3RvcmljYWwgaGF5IGFuZCBmZWVkIHlpZWxkc1wiXG5kZXNjcmlwdGlvbiA9IFwiSGF5IHlpZWxkcyBvdmVyIGEgMTAgeWVhciBwZXJpb2QgZnJvbSAxOTk5IC0gMjAwOS5cXG4gRGF0YSBpcyBzdG9yZWQgaW4gY3N2IGZvcm1hdCwgYW5kIGFsbCBtZWFzdXJlbWVudHMgYXJlIGluIGtnLlwiXG4jIHNldCBhIHByaWNlIHlvdSB0aGluayBpcyBmYWlyLiBJdCB3aWxsIGJlIGJpbGxlZCBtb250aGx5LlxucHJpY2UgPSAxMCBcbiIpKSxtZHgoInAiLG51bGwsIldlIGNhbiBhbHNvIGFkZCBzb21lIG90aGVyIG1ldGFkYXRhLiBUaGlzIGluY2x1ZGVzIGxhYmVscywgbG9jYXRpb24sIGRhdGEgcXVhbGl0eSwgZS50LmMuIFdlIGNhbiBkbyB0aGlzIGFzIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1weSJ9KSwiIyB1c2UgZGVzY3JpcHRpdmUgbGFiZWxzIHRvIGFwcGVhciBvbiB0aGUgQW1waG9yYSBzdWNoIGFzIGRhdGEgdHlwZSwgc3RydWN0dXJlIGFuZCBvdGhlciByZWxldmFudCBpbmZvcm1hdGlvblxubGFiZWxzID0gW1wiY3N2XCIsXCJ0aW1lc2VyaWVzXCIsXCJoYXlcIixcInlpZWxkc1wiXVxuXG4jIHNldCB0aGUgY29ycmVjdCBsb2NhdGlvbi4gVGhlc2UgY29vcmRpbmF0ZXMgYXJlIEFtcGhvcmEgRGF0YSdzIGhvbWUgb2ZmaWNlLlxubGF0ID0gLTI3LjQ1NzE0XG5sb24gPSAxNTMuMDcxMDZcbiIpKSxtZHgoInAiLG51bGwsIlRoZW4gd2UgbmVlZCB0byBpbXBvcnQgdGhlIHJpZ2h0IG1vZHVsZSBmcm9tIHRoZSBTREsiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5In0pLCJmcm9tIGFtcGhvcmEuY2xpZW50IGltcG9ydCBBbXBob3JhRGF0YVJlcG9zaXRvcnlDbGllbnRcbiIpKSxtZHgoInAiLG51bGwsIkZpbmFsbHksIHdlIGNhbiBjcmVhdGUgb3VyIGxvZ2luIGNsaWVudCBhbmQgY3JlYXRlIHRoZSBBbXBob3JhIiksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1weSJ9KSwiY2xpZW50ID0gQW1waG9yYURhdGFSZXBvc2l0b3J5Q2xpZW50KGNyZWRlbnRpYWxzKVxuYW1waG9yYSA9IGNsaWVudC5jcmVhdGVfYW1waG9yYShuYW1lPW5hbWUsIGRlc2NyaXB0aW9uPWRlc2MsIGxhYmVscz1sYWJlbHMsIHByaWNlPXByaWNlLCBsYXQ9bGF0LCBsb24gPSBsb24pXG4iKSksbWR4KCJwIixudWxsLCJZb3UgY2FuIGNoZWNrIHRoYXQgeW91ciBBbXBob3JhIHdhcyBjcmVhdGVkIGJ5IHByaW50aW5nIGl0cyBtZXRhZGF0YSIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtcHkifSksInByaW50KGFtcGhvcmEubWV0YWRhdGEpXG4iKSksbWR4KCJoMiIseyJpZCI6InNhdmUtdGhlLWlkLW9mLXlvdXItbmV3LWFtcGhvcmEifSwiU2F2ZSB0aGUgSWQgb2YgeW91ciBuZXcgQW1waG9yYSIpLG1keCgicCIsbnVsbCwiQW1waG9yYSBEYXRhIGF1dG9tYXRpY2FsbHkgY3JlYXRlcyB1bmlxdWUgaWRlbnRpZmllcnMgZm9yIGV2ZXJ5IG5ldyBBbXBob3JhIHRvIHByZXZlbnQgYWNjaWRlbnRhbCBkdXBsaWNhdGlvbnMgYW5kIGluY29uc2lzdGVuY2llcy4gSXRzIGdvb2QgcHJhY3RpY2UgdG8gc2F2ZSB0aGUgaWRzIG9mIG5ldyBBbXBob3JhIHlvdSBjcmVhdGUsIHNvIHlvdSBjYW4gZWFzaWx5IGZpbmQgdGhlbSBsYXRlci4iKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLXB5In0pLCJ3aXRoIG9wZW4oJ2FtcGhvcmFfaWQudHh0JywgJ3cnKSBhcyBmOlxuICAgIGYud3JpdGUoZid7YW1waG9yYS5hbXBob3JhX2lkfVxcbicpXG4iKSksbWR4KCJwIixudWxsLCJZb3VyIEFtcGhvcmEgaXMgY3JlYXRlZCwgYW5kIHJlYWR5IHRvIGZpbGwgd2l0aCBkYXRhISIpLG1keCgiaDIiLHsiaWQiOiJvdGhlci1jb2RlLXRvLWdldC15b3Utc3RhcnRlZCJ9LCJPdGhlciBjb2RlIHRvIGdldCB5b3Ugc3RhcnRlZCIpLG1keCgicCIsbnVsbCwiWW91IGNhbiBnZXQgY29kZSB0byBnZXQgeW91IHN0YXJ0ZWQgIixtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL2FtcGhvcmFkYXRhL3NhbXBsZXMvYmxvYi9tYXN0ZXIvZ2VuZXJpY190ZW1wbGF0ZXMvQ3JlYXRlX2FuX0FtcGhvcmEucHkifSksImhlcmUiKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}